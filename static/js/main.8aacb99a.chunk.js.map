{"version":3,"sources":["reportWebVitals.js","components/Button/Button.js","components/Random/Random.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","props","onClick","className","light","Random","useState","color","setColor","useEffect","applyColor","formatColor","ary","join","newColor","document","body","style","background","chooseColor","random","i","push","Math","floor","reduce","a","b","ReactDOM","render","StrictMode","getElementById"],"mappings":"0KAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cCGCQ,MARf,SAAgBC,GACZ,OACI,wBAAQC,QAASD,EAAMC,QAASC,UAAWF,EAAMG,MAAQ,eAAiB,cAA1E,sBCmCOC,MApCf,WAAmB,IAAD,EACYC,mBAAS,CAAC,GAAI,IAAK,MAD/B,mBACPC,EADO,KACAC,EADA,KAGdC,qBAAU,WACNC,OAGJ,IAIMC,EAAc,SAACC,GACjB,MAAO,OAASA,EAAIC,KAAK,MAAQ,KAG/BH,EAAa,WACf,IAAMI,EAAWH,EAAYJ,GAC7BQ,SAASC,KAAKC,MAAMC,WAAaJ,GAG/BK,EAAc,WAEhB,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAI,EAAGA,IACnBD,EAAOE,KAAKC,KAAKC,MAAsB,IAAhBD,KAAKH,WAEhC,OAAOA,GAGX,OACI,gCACI,qBAAIjB,UAAWI,EAAMkB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAK,IAAU,QAAU,QAAnE,2BAA2FhB,EAAYJ,GAAvG,OACA,cAAC,EAAD,CAAQH,MAAOG,EAAMkB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAK,IAASzB,QAxB5C,WAChBM,EAASW,UCLjBS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,SAM1BxC,K","file":"static/js/main.8aacb99a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nfunction Button(props) {\n    return (\n        <button onClick={props.onClick} className={props.light ? 'light-button' : 'dark-button'}>\n            Refresh\n        </button>\n    );\n}\n\nexport default Button;","import React, { useState, useEffect } from 'react';\nimport Button from '../Button/Button';\n\nfunction Random() {\n    const [color, setColor] = useState([69, 311, 420]);\n\n    useEffect(() => {\n        applyColor();\n    });\n\n    const handleClick = () => {\n        setColor(chooseColor);\n    };\n\n    const formatColor = (ary) => {\n        return 'rgb(' + ary.join(', ') + ')';\n    };\n\n    const applyColor = () => {\n        const newColor = formatColor(color);\n        document.body.style.background = newColor;\n    };\n\n    const chooseColor = () => {\n        const random = [];\n        for (let i = 0; i < 3; i++) {\n            random.push(Math.floor(Math.random() * 256));\n        }\n        return random;\n    };\n\n    return (\n        <div>\n            <h1 className={color.reduce((a, b) => a + b) < 127 * 3 ? 'white' : 'black'}>Your color is {formatColor(color)}.</h1>\n            <Button light={color.reduce((a, b) => a + b) < 127 * 3} onClick={handleClick} />\n        </div>\n    );\n}\n\nexport default Random;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Random from './components/Random/Random';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Random />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}