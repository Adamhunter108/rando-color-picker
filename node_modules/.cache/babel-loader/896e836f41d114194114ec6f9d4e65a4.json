{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Coding/rando-color-picker-react/rando-color-picker/src/components/Random/Random.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '../Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Random() {\n  _s();\n\n  const [color, setColor] = useState([69, 311, 420]);\n  useEffect(() => {\n    applyColor();\n  });\n\n  const handleClick = () => {\n    setColor(chooseColor);\n  };\n\n  const formatColor = ary => {\n    return 'rgb(' + ary.join(', ') + ')';\n  };\n\n  const applyColor = () => {\n    const newColor = formatColor(color);\n    document.body.style.background = newColor;\n  };\n\n  const chooseColor = () => {\n    const random = [];\n\n    for (let i = 0; i < 3; i++) {\n      random.push(Math.floor(Math.random() * 256));\n    }\n\n    return random;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: color.reduce((a, b) => a + b) < 127 * 3 ? 'white' : 'black',\n      children: [\"Your color is \", formatColor(color), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      light: color.reduce((a, b) => a + b) < 127 * 3,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Random, \"gzskWwTtK/LOxFLkB/m0SmI87QA=\");\n\n_c = Random;\nexport default Random;\n\nvar _c;\n\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"sources":["/Users/adam/Coding/rando-color-picker-react/rando-color-picker/src/components/Random/Random.js"],"names":["React","useState","useEffect","Button","Random","color","setColor","applyColor","handleClick","chooseColor","formatColor","ary","join","newColor","document","body","style","background","random","i","push","Math","floor","reduce","a","b"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,CAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,UAAU;AACb,GAFQ,CAAT;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACtBF,IAAAA,QAAQ,CAACG,WAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AACzB,WAAO,SAASA,GAAG,CAACC,IAAJ,CAAS,IAAT,CAAT,GAA0B,GAAjC;AACH,GAFD;;AAIA,QAAML,UAAU,GAAG,MAAM;AACrB,UAAMM,QAAQ,GAAGH,WAAW,CAACL,KAAD,CAA5B;AACAS,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAAiCJ,QAAjC;AACH,GAHD;;AAKA,QAAMJ,WAAW,GAAG,MAAM;AACtB,UAAMS,MAAM,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,MAAAA,MAAM,CAACE,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACH,MAAL,KAAgB,GAA3B,CAAZ;AACH;;AACD,WAAOA,MAAP;AACH,GAND;;AAQA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAEb,KAAK,CAACkB,MAAN,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA3B,IAAgC,MAAM,CAAtC,GAA0C,OAA1C,GAAoD,OAAnE;AAAA,mCAA2Ff,WAAW,CAACL,KAAD,CAAtG;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,KAAK,CAACkB,MAAN,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA3B,IAAgC,MAAM,CAArD;AAAwD,MAAA,OAAO,EAAEjB;AAAjE;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAlCQJ,M;;KAAAA,M;AAoCT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '../Button/Button';\n\nfunction Random() {\n    const [color, setColor] = useState([69, 311, 420]);\n\n    useEffect(() => {\n        applyColor();\n    });\n\n    const handleClick = () => {\n        setColor(chooseColor);\n    };\n\n    const formatColor = (ary) => {\n        return 'rgb(' + ary.join(', ') + ')';\n    };\n\n    const applyColor = () => {\n        const newColor = formatColor(color);\n        document.body.style.background = newColor;\n    };\n\n    const chooseColor = () => {\n        const random = [];\n        for (let i = 0; i < 3; i++) {\n            random.push(Math.floor(Math.random() * 256));\n        }\n        return random;\n    };\n\n    return (\n        <div>\n            <h1 className={color.reduce((a, b) => a + b) < 127 * 3 ? 'white' : 'black'}>Your color is {formatColor(color)}.</h1>\n            <Button light={color.reduce((a, b) => a + b) < 127 * 3} onClick={handleClick} />\n        </div>\n    );\n}\n\nexport default Random;"]},"metadata":{},"sourceType":"module"}